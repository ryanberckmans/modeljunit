--- 12th August 07 ----------------
Added the class TestingParameter class and IAlgorithmParameter interface.
The TestingParameter is just a structure to store setting from PanelTestDesign
panel.

When user save or load the parameters from a file, different algorithms
have different parameters, that will cause different loading and saving
behavior in different OptionPanel, the solution is using IAlgorithmParameter
interface.

Added ErrorMessage class to pop up a dialog to claim error
I use that class in ModelJUnitGUI class the event handler Run button, if 
user did select test model file or algorithm. The error message dialog will 
pop up.

Change the base class of OptionalPanel from JPanel to OptionPanelAdapter
which implement the IAlgorithmParameter interface, so I could generate 
different code when user choose different algorithm.
 
--- 13th August 07 ----------------
Format the code style by using the style from 
https://czt.svn.sourceforge.net/svnroot/czt/trunk/doc/eclipse-code-format-style.xml

Added Indentation class for generate code.

Modified class TestingParameter to Parameter and change it to static class
Clear code delete all System.out.print debug statement. 

--- 14th August 07 ----------------
The project requires files junit.jar (junit3.8.1) and modeljunit.jar now.

Modified the original run button handler, separate it into two functions :
runClass and compileFile.

Added runClass function into ModelJunitGUI, this function uses reflection to 
load and initialize ModelTestCase object and run the test and display result
in a text area.

Have not finished the compileFile function :(

--- 15th August 07 ----------------
Start to change the GUI, added a text area into Result Viewer panel.

[problem 815-1]In the Result viewer panel when user resize the frame, the size of split
panel also changed, but not always, like double click frame to maximize 
the window, the split pane size does not changed.

[solution 815-1]Partial solved, I changed the size of the panel code viewer when user changes frame size. 

[bug 815-2] If user load class file twice, he/she will get duplicate class
exception.

[solution 815-2] Move the class loader be called when user selected model instead of in run event handler.

--- 16th August 07 ----------------
Added border on panels in the test design panel.

Added slider to show the average reset possibility.
Added comboboxes to display verbosity and failure verbosity. 
Modified the Parameter class to store 3 variable (reset possibility, verbosity, failure verbosity).

--- 20th August 07 ----------------
Fixed bug the initial value of reset possibility should be 0.05 instead of ModelTestCase.DEFAULT_RESET_PROBABILITY
because the minimus value of the slider is 0.05 not ModelTestCase.DEFAULT_RESET_PROBABILITY.

--- 25th August 08 ----------------
Added DialogPackage Selection class, in this dialog, user could input the package name, application will
add package and "." in front of the class name. and I changed the ClassFileLoader class, I use forName to 
load the class instead of using defineClass to load class to VM.

--- 26th August 08 ----------------
Modified Parameter class, PanelTestDesign class and OptionPanelRandomWalk to adapt to the FSM class changing.

--- 27th August 08 ----------------
Keep modifying those classes yesterday. 
Cannot find a way to print graph to dot file (printGraphDot)
[bug 827-1]
Exception in thread "AWT-EventQueue-0" net.sourceforge.czt.jdsl.core.api.InvalidAccessorException: vertex is null
	at net.sourceforge.czt.jdsl.graph.ref.IncidenceListGraph._checkVertex(IncidenceListGraph.java:594)
	at net.sourceforge.czt.jdsl.graph.ref.IncidenceListGraph.degree(IncidenceListGraph.java:236)
	at net.sourceforge.czt.jdsl.graph.ref.AbstractGraph.connectingEdges(AbstractGraph.java:201)
	at net.sourceforge.czt.modeljunit.GraphListener.doneTransition(GraphListener.java:375)
	at net.sourceforge.czt.modeljunit.Model.notifyDoneTransition(Model.java:566)
	at net.sourceforge.czt.modeljunit.Model.doAction(Model.java:459)
	at net.sourceforge.czt.modeljunit.RandomTester.doRandomAction(RandomTester.java:109)
	at net.sourceforge.czt.modeljunit.RandomTester.doRandomActionOrReset(RandomTester.java:130)
	at net.sourceforge.czt.modeljunit.RandomTester.generate(RandomTester.java:154)
	at net.sourceforge.czt.modeljunit.Tester.generate(Tester.java:125)
	at net.sourceforge.czt.modeljunit.Tester.buildGraph(Tester.java:147)
	
--- 28th August 08 ----------------
Added Greedy algorithm panel

--- 29th August 08 ----------------
[solution 827-1]Solved
Debug and testing

--- 18th September 07 ----------------
Stores actions into parameter class when user successfully selected model.
 
Added ExecuteActions class, the panel could generate buttons according to
number of actions. Those action information comes from Parameter class.

--- 19th September 07 ----------------
Modify the ExecuteActions class change buttons to a JList
user could click items in list to run action.

--- 20th September 07 ----------------
Fix typo error in Parameter.java the initialize reset possibility should be 0.5 instead 0.05
Reduce generated code length when user did select random generate test.

--- 22th September 07 ----------------
Implement functions of the ExecuteActions class 
Got problem about run actions, I think I should save Tester object 
and action information into Parameter class, but Parameter class is
already becomes a huge class, and it is getting mess~~~ difficult to 
read and difficult to modify.

Delete all run test staff from Parameter class. I do not think anyone 
event want try to understand this class, I think I should separate some 
functions or variable to other class.

--- 24th September 07 ----------------
Separate the test running from PanelTestDesign to TestRunner class,
The original  PanelTestDesign contains code generation and test running,
since the new panel ExecuteActions has to use some function of test running,
I decide create a new class to run test. So PanelTestDesign&ExecuteActions
can share the test execution.

Oh~~~, the new class name is TestExeModel it contains 2 functions RunTestAuto
and RunTestManual. RunTestAuto is for run button in ModelJUnitGUI and RunTestManual
is for panel ExecuteActions, user can run test by select actions one by one.

--- 28th September 07 ----------------
Redesign the PanelExecuteActions class's GUI, instead of use two panel, use GridBag
layout. Implemented the functionality that user click action list's(left JList) action, 
model will run corresponding action and display the result in action history list
(right JList).

--- 29th September 07 ----------------
Added function that if the action does not satisfy the guard's condition the function 
name in action list will become gray.
Found two bugs:
[bug 929-1] If user reload model, the action list in PanelExecuteAction does not refresh
[reason 929-1] Unknown
[bug 929-2] If user select algorithm before load model, he/she will get exception
[reason 929-2] I initialized tester when user choose algorithm, if model is null
				exception is triggered.
--- 31th September 07 ----------------
Implement the button functionality of restore and export java buttons.

--- 5th October 07 ----------------
Changes in PanelTestDesign pane:
Stop using DialogPackageSelection.java dialog.
Add function to store package name and location to setting file once user click save to default button.

Create new dialog DialogPackageURLSelection.java to set package location and name.

Fixed the bug in PanelExecuteActions pane, that when user export java file, unexpected newline 
symbols are attached in comments.

--- 6th October 07 ----------------
Use the URLClassLoader to set package location 
Modified the reset button in PanelExecuteActions pane, change it will clear the 
action history list (right list) now.

Changes in PanelExecuteActions.java
Change the background color of disabled action list item in action list(left list).
Change the background and test color of selected list item in action list(left list).

--- 7th October 07 ----------------
Deprecated the AlgorithmPanel class
Using OptionPanelCreator to create option panels

--- 9th October 07 ----------------
Fixed several typo errors. Made the DialogPackageURLSelection dialog close when user save package
path and name.

--- 10th October 07 ----------------
To design the coverage panel, added IView interface, which is a Model-View pattern. TestExeModel
is the model and PanelCoverage is the view. View will be updated if data in model is changed. Once
that happened, model will ensure view's update will be involved.

--- 13th October 07 ----------------
Added PanelCoverage panel, implement the function to draw coordinate, the coordinate scale is
adjustable according to the walk length in test design panel

--- 17th October 07 ----------------
Fix bug that run test second time cause coverage compute wrong result by recreate tester object 
every time user click run button

--- 18th October 07 ----------------
Finish the PanelCoverage panel. Run test several times when user click run button and update the
test sequence array list in PanelCoverage. If user changes the walk length, the event handler will
call TestExeModel update to update data in PanelCoverage.

--- 15th November 07 ----------------
Add about dialog
--- 17th November 07 ----------------
Line chart graph color selection. 
